class Solution:
    def productExceptSelf(self, nums):
        res = [1]*len(nums)
        
        prefix=1
        for i in range(len(nums)):
            res[i]=prefix
            prefix *=nums[i]
        postfix=1
        for i in range(len(nums) -1, -1, -1):
            res[i]*= postfix
            postfix *= nums[i]
        return res
# time complexity: O(n)
# space complexity: O(1)

class Solution:
    def productExceptSelf(self, nums):
        answer = [1]*len(nums)
        for i in range(1, len(nums)):
            answer[i]=answer[i-1]*nums[i-1]
        
        R=1
        for i in range(len(nums)-1, -1, -1):
            answer[i]*=R
            R*=nums[i]
        return answer
    
# time complexity: O(n)
# space complexity: O(1)
